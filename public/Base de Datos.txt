-- Generado por Oracle SQL Developer Data Modeler 19.4.0.350.1424
--   en:        2020-02-09 19:02:27 COT
--   sitio:      Oracle Database 11g
--   tipo:      Oracle Database 11g



CREATE TABLE categoria (
    cat_id           NUMBER NOT NULL,
    cat_nombre       VARCHAR2(50),
    cat_descripcion  VARCHAR2(50)
);

ALTER TABLE categoria ADD CONSTRAINT categoria_pk PRIMARY KEY ( cat_id );

CREATE TABLE ciudad (
    ciud_id      NUMBER NOT NULL,
    ciud_nombre  VARCHAR2(50)
);

ALTER TABLE ciudad ADD CONSTRAINT ciudad_pk PRIMARY KEY ( ciud_id );

CREATE TABLE cliente (
    clie_id             NUMBER NOT NULL,
    clie_nombre         VARCHAR2(50),
    clie_apellido       VARCHAR2(50),
    clie_num_documento  VARCHAR2(50),
    clie_telefono       NUMBER,
    clie_direccion      VARCHAR2(50),
    clie_email          VARCHAR2(50),
    ciud_id             NUMBER NOT NULL,
    doc_id              NUMBER NOT NULL
);

ALTER TABLE cliente ADD CONSTRAINT cliente_pk PRIMARY KEY ( clie_id );

CREATE TABLE detalle_ingreso (
    det_ingreso_id        NUMBER NOT NULL,
    det_ingreso_cantidad  NUMBER,
    det_ingreso_precio    NUMBER,
    det_ingreso_precio_1  NUMBER,
    ing_id                NUMBER NOT NULL
);

ALTER TABLE detalle_ingreso ADD CONSTRAINT detalle_ingreso_pk PRIMARY KEY ( det_ingreso_id );

CREATE TABLE detalle_venta (
    det_venta_id        NUMBER NOT NULL,
    det_venta_cantidad  NUMBER,
    det_venta_precio    NUMBER,
    ven_id              NUMBER NOT NULL,
    prod_id             NUMBER NOT NULL
);

ALTER TABLE detalle_venta ADD CONSTRAINT detalle_venta_pk PRIMARY KEY ( det_venta_id );

CREATE TABLE ingreso (
    ing_id               NUMBER NOT NULL,
    ing_num_comprobante  VARCHAR2(50),
    ing_fecha            DATE,
    ing_total            NUMBER,
    usu_id               NUMBER NOT NULL,
    prov_id              NUMBER NOT NULL
);

ALTER TABLE ingreso ADD CONSTRAINT ingreso_pk PRIMARY KEY ( ing_id );

CREATE TABLE producto (
    prod_id            NUMBER NOT NULL,
    prod_nombre        VARCHAR2(50),
    prod_precio_venta  NUMBER,
    prod_canidad       NUMBER,
    prod_descricpcion  VARCHAR2(50),
    prod_fecha         DATE,
    cat_id             NUMBER NOT NULL,
    prov_id            NUMBER NOT NULL
);

ALTER TABLE producto ADD CONSTRAINT producto_pk PRIMARY KEY ( prod_id );

CREATE TABLE proveedor (
    prov_id             NUMBER NOT NULL,
    prov_nombre         VARCHAR2(50),
    prov_num_documento  VARCHAR2(50),
    prov_telefono       NUMBER,
    prov_direccion      VARCHAR2(50),
    prov_email          VARCHAR2(50),
    doc_id              NUMBER NOT NULL,
    ciud_id             NUMBER NOT NULL
);

ALTER TABLE proveedor ADD CONSTRAINT proveedor_pk PRIMARY KEY ( prov_id );

CREATE TABLE rol (
    rol_id           NUMBER NOT NULL,
    rol_nombre       VARCHAR2(50),
    rol_descripcion  VARCHAR2(50)
);

ALTER TABLE rol ADD CONSTRAINT rol_pk PRIMARY KEY ( rol_id );

CREATE TABLE tipo_documento (
    doc_id    NUMBER NOT NULL,
    doc_tipo  VARCHAR2(50)
);

ALTER TABLE tipo_documento ADD CONSTRAINT tipo_documento_pk PRIMARY KEY ( doc_id );

CREATE TABLE usuario (
    usu_id             NUMBER NOT NULL,
    usu_nombre         VARCHAR2(50),
    usu_apellido       VARCHAR2(50),
    usu_password       VARCHAR2(200),
    usu_num_documento  VARCHAR2(50),
    usu_telefono       NUMBER,
    usu_direccion      VARCHAR2(50),
    usu_email          VARCHAR2(50),
    rol_id             NUMBER NOT NULL,
    ciud_id            NUMBER NOT NULL,
    doc_id             NUMBER NOT NULL
);

ALTER TABLE usuario ADD CONSTRAINT usuario_pk PRIMARY KEY ( usu_id );

CREATE TABLE venta (
    ven_id               NUMBER NOT NULL,
    ven_num_comprobante  VARCHAR2(100),
    ven_fecha            DATE,
    ven_impuesto         NUMBER,
    ven_total            NUMBER,
    clie_id              NUMBER NOT NULL,
    usu_id               NUMBER NOT NULL
);

ALTER TABLE venta ADD CONSTRAINT venta_pk PRIMARY KEY ( ven_id );

ALTER TABLE cliente
    ADD CONSTRAINT cliente_ciudad_fk FOREIGN KEY ( ciud_id )
        REFERENCES ciudad ( ciud_id );

ALTER TABLE cliente
    ADD CONSTRAINT cliente_tipo_documento_fk FOREIGN KEY ( doc_id )
        REFERENCES tipo_documento ( doc_id );

ALTER TABLE detalle_ingreso
    ADD CONSTRAINT detalle_ingreso_ingreso_fk FOREIGN KEY ( ing_id )
        REFERENCES ingreso ( ing_id );

ALTER TABLE detalle_venta
    ADD CONSTRAINT detalle_venta_producto_fk FOREIGN KEY ( prod_id )
        REFERENCES producto ( prod_id );

ALTER TABLE detalle_venta
    ADD CONSTRAINT detalle_venta_venta_fk FOREIGN KEY ( ven_id )
        REFERENCES venta ( ven_id );

ALTER TABLE ingreso
    ADD CONSTRAINT ingreso_proveedor_fk FOREIGN KEY ( prov_id )
        REFERENCES proveedor ( prov_id );

ALTER TABLE ingreso
    ADD CONSTRAINT ingreso_usuario_fk FOREIGN KEY ( usu_id )
        REFERENCES usuario ( usu_id );

ALTER TABLE producto
    ADD CONSTRAINT producto_categoria_fk FOREIGN KEY ( cat_id )
        REFERENCES categoria ( cat_id );

ALTER TABLE producto
    ADD CONSTRAINT producto_proveedor_fk FOREIGN KEY ( prov_id )
        REFERENCES proveedor ( prov_id );

ALTER TABLE proveedor
    ADD CONSTRAINT proveedor_ciudad_fk FOREIGN KEY ( ciud_id )
        REFERENCES ciudad ( ciud_id );

ALTER TABLE proveedor
    ADD CONSTRAINT proveedor_tipo_documento_fk FOREIGN KEY ( doc_id )
        REFERENCES tipo_documento ( doc_id );

ALTER TABLE usuario
    ADD CONSTRAINT usuario_ciudad_fk FOREIGN KEY ( ciud_id )
        REFERENCES ciudad ( ciud_id );

ALTER TABLE usuario
    ADD CONSTRAINT usuario_rol_fk FOREIGN KEY ( rol_id )
        REFERENCES rol ( rol_id );

ALTER TABLE usuario
    ADD CONSTRAINT usuario_tipo_documento_fk FOREIGN KEY ( doc_id )
        REFERENCES tipo_documento ( doc_id );

ALTER TABLE venta
    ADD CONSTRAINT venta_cliente_fk FOREIGN KEY ( clie_id )
        REFERENCES cliente ( clie_id );

ALTER TABLE venta
    ADD CONSTRAINT venta_usuario_fk FOREIGN KEY ( usu_id )
        REFERENCES usuario ( usu_id );

CREATE SEQUENCE categoria_cat_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER categoria_cat_id_trg BEFORE
    INSERT ON categoria
    FOR EACH ROW
    WHEN ( new.cat_id IS NULL )
BEGIN
    :new.cat_id := categoria_cat_id_seq.nextval;
END;
/

CREATE SEQUENCE ciudad_ciud_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER ciudad_ciud_id_trg BEFORE
    INSERT ON ciudad
    FOR EACH ROW
    WHEN ( new.ciud_id IS NULL )
BEGIN
    :new.ciud_id := ciudad_ciud_id_seq.nextval;
END;
/

CREATE SEQUENCE cliente_clie_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER cliente_clie_id_trg BEFORE
    INSERT ON cliente
    FOR EACH ROW
    WHEN ( new.clie_id IS NULL )
BEGIN
    :new.clie_id := cliente_clie_id_seq.nextval;
END;
/

CREATE SEQUENCE detalle_ingreso_det_ingreso_id START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER detalle_ingreso_det_ingreso_id BEFORE
    INSERT ON detalle_ingreso
    FOR EACH ROW
    WHEN ( new.det_ingreso_id IS NULL )
BEGIN
    :new.det_ingreso_id := detalle_ingreso_det_ingreso_id.nextval;
END;
/

CREATE SEQUENCE detalle_venta_det_venta_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER detalle_venta_det_venta_id_trg BEFORE
    INSERT ON detalle_venta
    FOR EACH ROW
    WHEN ( new.det_venta_id IS NULL )
BEGIN
    :new.det_venta_id := detalle_venta_det_venta_id_seq.nextval;
END;
/

CREATE SEQUENCE ingreso_ing_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER ingreso_ing_id_trg BEFORE
    INSERT ON ingreso
    FOR EACH ROW
    WHEN ( new.ing_id IS NULL )
BEGIN
    :new.ing_id := ingreso_ing_id_seq.nextval;
END;
/

CREATE SEQUENCE producto_prod_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER producto_prod_id_trg BEFORE
    INSERT ON producto
    FOR EACH ROW
    WHEN ( new.prod_id IS NULL )
BEGIN
    :new.prod_id := producto_prod_id_seq.nextval;
END;
/

CREATE SEQUENCE proveedor_prov_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER proveedor_prov_id_trg BEFORE
    INSERT ON proveedor
    FOR EACH ROW
    WHEN ( new.prov_id IS NULL )
BEGIN
    :new.prov_id := proveedor_prov_id_seq.nextval;
END;
/

CREATE SEQUENCE rol_rol_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER rol_rol_id_trg BEFORE
    INSERT ON rol
    FOR EACH ROW
    WHEN ( new.rol_id IS NULL )
BEGIN
    :new.rol_id := rol_rol_id_seq.nextval;
END;
/

CREATE SEQUENCE tipo_documento_doc_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER tipo_documento_doc_id_trg BEFORE
    INSERT ON tipo_documento
    FOR EACH ROW
    WHEN ( new.doc_id IS NULL )
BEGIN
    :new.doc_id := tipo_documento_doc_id_seq.nextval;
END;
/

CREATE SEQUENCE usuario_usu_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER usuario_usu_id_trg BEFORE
    INSERT ON usuario
    FOR EACH ROW
    WHEN ( new.usu_id IS NULL )
BEGIN
    :new.usu_id := usuario_usu_id_seq.nextval;
END;
/

CREATE SEQUENCE venta_ven_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER venta_ven_id_trg BEFORE
    INSERT ON venta
    FOR EACH ROW
    WHEN ( new.ven_id IS NULL )
BEGIN
    :new.ven_id := venta_ven_id_seq.nextval;
END;
/



-- Informe de Resumen de Oracle SQL Developer Data Modeler: 
-- 
-- CREATE TABLE                            12
-- CREATE INDEX                             0
-- ALTER TABLE                             28
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                          12
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                         12
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
